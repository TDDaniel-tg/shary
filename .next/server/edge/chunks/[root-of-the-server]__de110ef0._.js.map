{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const { pathname } = request.nextUrl;\r\n\r\n  // Перенаправление с /admin на /admin/login (если не вход в админку)\r\n  if (pathname === '/admin') {\r\n    return NextResponse.redirect(new URL('/admin/login', request.url));\r\n  }\r\n\r\n  // Перенаправляем все подпути /admin/* (кроме /admin/login) на /admin_dashboard/*\r\n  if (pathname.startsWith('/admin/') && pathname !== '/admin/login') {\r\n    // Создаем новый URL заменяя /admin/ на /admin_dashboard/\r\n    const newPath = pathname.replace('/admin/', '/admin_dashboard/');\r\n    return NextResponse.redirect(new URL(newPath, request.url));\r\n  }\r\n\r\n  // Проверяем доступ к /admin_dashboard и всем его подпутям\r\n  if (pathname.startsWith('/admin_dashboard')) {\r\n    const token = request.cookies.get('admin-token')?.value;\r\n\r\n    if (!token) {\r\n      // Если нет токена, перенаправляем на страницу логина\r\n      return NextResponse.redirect(new URL('/admin/login', request.url));\r\n    }\r\n\r\n    // Базовая проверка формата токена JWT (должен содержать две точки)\r\n    const tokenParts = token.split('.');\r\n    if (tokenParts.length !== 3) {\r\n      return NextResponse.redirect(new URL('/admin/login', request.url));\r\n    }\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: ['/admin', '/admin/:path*', '/admin_dashboard/:path*'],\r\n};"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,oEAAoE;IACpE,IAAI,aAAa,UAAU;QACzB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;IAClE;IAEA,iFAAiF;IACjF,IAAI,SAAS,UAAU,CAAC,cAAc,aAAa,gBAAgB;QACjE,yDAAyD;QACzD,MAAM,UAAU,SAAS,OAAO,CAAC,WAAW;QAC5C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,SAAS,QAAQ,GAAG;IAC3D;IAEA,0DAA0D;IAC1D,IAAI,SAAS,UAAU,CAAC,qBAAqB;QAC3C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,gBAAgB;QAElD,IAAI,CAAC,OAAO;YACV,qDAAqD;YACrD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;QAClE;QAEA,mEAAmE;QACnE,MAAM,aAAa,MAAM,KAAK,CAAC;QAC/B,IAAI,WAAW,MAAM,KAAK,GAAG;YAC3B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;QAClE;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAU;QAAiB;KAA0B;AACjE"}}]
}