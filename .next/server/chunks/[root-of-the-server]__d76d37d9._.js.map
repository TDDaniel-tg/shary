{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/work/project/app/api/seo/sitemap/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { writeFileSync, readFileSync } from 'fs';\r\nimport { join } from 'path';\r\n\r\n// В реальном приложении это будет храниться в базе данных\r\nlet sitemapContent = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\r\n  <url>\r\n    <loc>https://example.com/</loc>\r\n    <changefreq>daily</changefreq>\r\n    <priority>1.0</priority>\r\n  </url>\r\n  <url>\r\n    <loc>https://example.com/catalog</loc>\r\n    <changefreq>daily</changefreq>\r\n    <priority>0.9</priority>\r\n  </url>\r\n  <url>\r\n    <loc>https://example.com/contacts</loc>\r\n    <changefreq>weekly</changefreq>\r\n    <priority>0.8</priority>\r\n  </url>\r\n  <url>\r\n    <loc>https://example.com/about</loc>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.7</priority>\r\n  </url>\r\n  <url>\r\n    <loc>https://example.com/delivery</loc>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n  <url>\r\n    <loc>https://example.com/payment</loc>\r\n    <changefreq>monthly</changefreq>\r\n    <priority>0.6</priority>\r\n  </url>\r\n</urlset>`;\r\n\r\nexport async function GET() {\r\n  try {\r\n    return new NextResponse(sitemapContent, {\r\n      status: 200,\r\n      headers: {\r\n        'Content-Type': 'application/xml',\r\n      },\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Ошибка при получении sitemap' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const { content } = await request.json();\r\n    \r\n    if (!content) {\r\n      return NextResponse.json({ error: 'Контент не может быть пустым' }, { status: 400 });\r\n    }\r\n\r\n    sitemapContent = content;\r\n    \r\n    // Сохраняем в файл\r\n    try {\r\n      const sitemapPath = join(process.cwd(), 'public', 'sitemap.xml');\r\n      writeFileSync(sitemapPath, content);\r\n    } catch (fileError) {\r\n      console.error('Ошибка при записи файла:', fileError);\r\n    }\r\n\r\n    return NextResponse.json({ message: 'sitemap.xml успешно обновлен' });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Ошибка при обновлении sitemap' }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,0DAA0D;AAC1D,IAAI,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAgCb,CAAC;AAEH,eAAe;IACpB,IAAI;QACF,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,gBAAgB;YACtC,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAA+B,GAAG;YAAE,QAAQ;QAAI;IACpF;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAEtC,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA+B,GAAG;gBAAE,QAAQ;YAAI;QACpF;QAEA,iBAAiB;QAEjB,mBAAmB;QACnB,IAAI;YACF,MAAM,cAAc,CAAA,GAAA,iGAAA,CAAA,OAAI,AAAD,EAAE,QAAQ,GAAG,IAAI,UAAU;YAClD,CAAA,GAAA,6FAAA,CAAA,gBAAa,AAAD,EAAE,aAAa;QAC7B,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA+B;IACrE,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgC,GAAG;YAAE,QAAQ;QAAI;IACrF;AACF","debugId":null}}]
}