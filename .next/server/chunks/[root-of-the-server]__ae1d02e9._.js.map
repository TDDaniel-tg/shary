{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Desktop/work/project/app/api/seo/meta/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\n// Интерфейс для мета-тегов\r\ninterface MetaTags {\r\n  title: string;\r\n  description: string;\r\n  keywords?: string;\r\n  altImages?: Record<string, string>;\r\n  titleTemplate?: string;\r\n}\r\n\r\n// Хранилище мета-тегов (в реальном приложении - база данных)\r\nconst metaStorage: Record<string, MetaTags> = {\r\n  home: {\r\n    title: 'Воздушные шары в Москве - доставка праздника на дом',\r\n    description: 'Большой выбор воздушных шаров для любого праздника. Быстрая доставка по Москве. Гарантия качества.',\r\n    keywords: 'воздушные шары, шары с гелием, доставка шаров, праздничные шары, Москва',\r\n    titleTemplate: '{title} | Шары и декор'\r\n  },\r\n  catalog: {\r\n    title: 'Каталог воздушных шаров и праздничного декора',\r\n    description: 'Широкий ассортимент воздушных шаров, подарочных коробок, свечей и праздничного декора. Доставка по Москве.',\r\n    keywords: 'каталог шаров, воздушные шары, праздничный декор, подарочные коробки',\r\n    titleTemplate: '{category} - {title} | Шары и декор'\r\n  }\r\n};\r\n\r\n// Функция для транслитерации\r\nfunction transliterate(text: string): string {\r\n  const translitMap: Record<string, string> = {\r\n    'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ё': 'yo',\r\n    'ж': 'zh', 'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm',\r\n    'н': 'n', 'о': 'o', 'п': 'p', 'р': 'r', 'с': 's', 'т': 't', 'у': 'u',\r\n    'ф': 'f', 'х': 'h', 'ц': 'ts', 'ч': 'ch', 'ш': 'sh', 'щ': 'sch',\r\n    'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya',\r\n    ' ': '-', '_': '-'\r\n  };\r\n\r\n  return text.toLowerCase().split('').map(char => translitMap[char] || char).join('');\r\n}\r\n\r\n// Автогенерация ALT для изображений\r\nfunction generateImageAlt(imageName: string, category?: string): string {\r\n  const cleanName = imageName.replace(/\\.(jpg|jpeg|png|gif|webp)$/i, '');\r\n  const transliterated = transliterate(cleanName);\r\n  \r\n  if (category) {\r\n    return `${transliterated}-${transliterate(category)}`;\r\n  }\r\n  \r\n  return transliterated;\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const page = searchParams.get('page') || 'home';\r\n    \r\n    const metaTags = metaStorage[page];\r\n    \r\n    if (!metaTags) {\r\n      return NextResponse.json({ error: 'Страница не найдена' }, { status: 404 });\r\n    }\r\n    \r\n    return NextResponse.json(metaTags);\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Ошибка при получении мета-тегов' }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const { page, metaTags } = await request.json();\r\n    \r\n    if (!page || !metaTags) {\r\n      return NextResponse.json({ error: 'Страница и мета-теги обязательны' }, { status: 400 });\r\n    }\r\n    \r\n    // Автогенерация ALT для изображений если не указано\r\n    if (metaTags.altImages) {\r\n      Object.keys(metaTags.altImages).forEach(imageKey => {\r\n        if (!metaTags.altImages[imageKey]) {\r\n          metaTags.altImages[imageKey] = generateImageAlt(imageKey, metaTags.category);\r\n        }\r\n      });\r\n    }\r\n    \r\n    metaStorage[page] = metaTags;\r\n    \r\n    return NextResponse.json({ \r\n      message: 'Мета-теги успешно обновлены',\r\n      metaTags: metaStorage[page]\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Ошибка при обновлении мета-тегов' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Генерация ALT для изображения\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const { imageName, category } = await request.json();\r\n    \r\n    if (!imageName) {\r\n      return NextResponse.json({ error: 'Название изображения обязательно' }, { status: 400 });\r\n    }\r\n    \r\n    const altText = generateImageAlt(imageName, category);\r\n    \r\n    return NextResponse.json({ \r\n      altText,\r\n      transliterated: transliterate(imageName)\r\n    });\r\n  } catch (error) {\r\n    return NextResponse.json({ error: 'Ошибка при генерации ALT' }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}